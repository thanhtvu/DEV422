// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/album.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AlbumService {
  public static partial class Album
  {
    static readonly string __ServiceName = "album.Album";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.AddAlbumRequest> __Marshaller_album_AddAlbumRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.AddAlbumRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.AddAlbumResponse> __Marshaller_album_AddAlbumResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.AddAlbumResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.AlbumRequest> __Marshaller_album_AlbumRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.AlbumRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.AlbumResponse> __Marshaller_album_AlbumResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.AlbumResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.UpdateAlbumRequest> __Marshaller_album_UpdateAlbumRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.UpdateAlbumRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.UpdateAlbumResponse> __Marshaller_album_UpdateAlbumResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.UpdateAlbumResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.DeleteAlbumRequest> __Marshaller_album_DeleteAlbumRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.DeleteAlbumRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.DeleteAlbumResponse> __Marshaller_album_DeleteAlbumResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.DeleteAlbumResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.ListAlbumsRequest> __Marshaller_album_ListAlbumsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.ListAlbumsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AlbumService.ListAlbumsResponse> __Marshaller_album_ListAlbumsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumService.ListAlbumsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AlbumService.AddAlbumRequest, global::AlbumService.AddAlbumResponse> __Method_AddAlbum = new grpc::Method<global::AlbumService.AddAlbumRequest, global::AlbumService.AddAlbumResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAlbum",
        __Marshaller_album_AddAlbumRequest,
        __Marshaller_album_AddAlbumResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AlbumService.AlbumRequest, global::AlbumService.AlbumResponse> __Method_GetAlbum = new grpc::Method<global::AlbumService.AlbumRequest, global::AlbumService.AlbumResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAlbum",
        __Marshaller_album_AlbumRequest,
        __Marshaller_album_AlbumResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AlbumService.UpdateAlbumRequest, global::AlbumService.UpdateAlbumResponse> __Method_UpdateAlbum = new grpc::Method<global::AlbumService.UpdateAlbumRequest, global::AlbumService.UpdateAlbumResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAlbum",
        __Marshaller_album_UpdateAlbumRequest,
        __Marshaller_album_UpdateAlbumResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AlbumService.DeleteAlbumRequest, global::AlbumService.DeleteAlbumResponse> __Method_DeleteAlbum = new grpc::Method<global::AlbumService.DeleteAlbumRequest, global::AlbumService.DeleteAlbumResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAlbum",
        __Marshaller_album_DeleteAlbumRequest,
        __Marshaller_album_DeleteAlbumResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AlbumService.ListAlbumsRequest, global::AlbumService.ListAlbumsResponse> __Method_ListAlbums = new grpc::Method<global::AlbumService.ListAlbumsRequest, global::AlbumService.ListAlbumsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAlbums",
        __Marshaller_album_ListAlbumsRequest,
        __Marshaller_album_ListAlbumsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AlbumService.AlbumReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Album</summary>
    [grpc::BindServiceMethod(typeof(Album), "BindService")]
    public abstract partial class AlbumBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AlbumService.AddAlbumResponse> AddAlbum(global::AlbumService.AddAlbumRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AlbumService.AlbumResponse> GetAlbum(global::AlbumService.AlbumRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AlbumService.UpdateAlbumResponse> UpdateAlbum(global::AlbumService.UpdateAlbumRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AlbumService.DeleteAlbumResponse> DeleteAlbum(global::AlbumService.DeleteAlbumRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AlbumService.ListAlbumsResponse> ListAlbums(global::AlbumService.ListAlbumsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AlbumBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddAlbum, serviceImpl.AddAlbum)
          .AddMethod(__Method_GetAlbum, serviceImpl.GetAlbum)
          .AddMethod(__Method_UpdateAlbum, serviceImpl.UpdateAlbum)
          .AddMethod(__Method_DeleteAlbum, serviceImpl.DeleteAlbum)
          .AddMethod(__Method_ListAlbums, serviceImpl.ListAlbums).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AlbumBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddAlbum, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumService.AddAlbumRequest, global::AlbumService.AddAlbumResponse>(serviceImpl.AddAlbum));
      serviceBinder.AddMethod(__Method_GetAlbum, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumService.AlbumRequest, global::AlbumService.AlbumResponse>(serviceImpl.GetAlbum));
      serviceBinder.AddMethod(__Method_UpdateAlbum, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumService.UpdateAlbumRequest, global::AlbumService.UpdateAlbumResponse>(serviceImpl.UpdateAlbum));
      serviceBinder.AddMethod(__Method_DeleteAlbum, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumService.DeleteAlbumRequest, global::AlbumService.DeleteAlbumResponse>(serviceImpl.DeleteAlbum));
      serviceBinder.AddMethod(__Method_ListAlbums, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumService.ListAlbumsRequest, global::AlbumService.ListAlbumsResponse>(serviceImpl.ListAlbums));
    }

  }
}
#endregion
